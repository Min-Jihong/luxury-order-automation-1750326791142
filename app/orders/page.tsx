'use client';import{useState,useEffect}from'react';import{Table,TableBody,TableCell,TableHead,TableHeader,TableRow}from'@/components/ui/table';import{Button}from'@/components/ui/button';import{Dialog,DialogContent,DialogDescription,DialogFooter,DialogHeader,DialogTitle,DialogTrigger}from'@/components/ui/dialog';import{Select,SelectContent,SelectItem,SelectTrigger,SelectValue}from'@/components/ui/select';import{Card,CardContent,CardHeader,CardTitle}from'@/components/ui/card';import{Input}from'@/components/ui/input';import{Label}from'@/components/ui/label';import{DropdownMenu,DropdownMenuContent,DropdownMenuItem,DropdownMenuTrigger}from'@/components/ui/dropdown-menu';import{MoreHorizontal}from'lucide-react';interface OrderItem{id:string;name:string;quantity:number;price:number;}type OrderStatus="주문접수"|"처리중"|"배송준비중"|"배송완료"|"주문취소";type PaymentStatus="결제대기"|"결제완료"|"결제취소";type PlacementStatus="발주대기"|"발주완료"|"발주취소";interface Order{id:string;customerName:string;customerEmail:string;orderDate:string;totalAmount:number;status:OrderStatus;paymentStatus:PaymentStatus;placementStatus:PlacementStatus;items:OrderItem[];shippingAddress:string;trackingNumber?:string;}const getOrdersFromLocalStorage=():Order[]=>{if(typeof window==='undefined'){return[];}const storedOrders=localStorage.getItem('orders');return storedOrders?JSON.parse(storedOrders):[];};const saveOrdersToLocalStorage=(orders:Order[])=>{if(typeof window!=='undefined'){localStorage.setItem('orders',JSON.stringify(orders));}};const initialOrders:Order[]=[{id:'ORD001',customerName:'김철수',customerEmail:'kim@example.com',orderDate:'2023-10-26T10:00:00Z',totalAmount:1500000,status:'주문접수',paymentStatus:'결제대기',placementStatus:'발주대기',items:[{id:'ITEM001',name:'명품 가방 A',quantity:1,price:1500000}],shippingAddress:'서울시 강남구 테헤란로 123'},{id:'ORD002',customerName:'이영희',customerEmail:'lee@example.com',orderDate:'2023-10-25T14:30:00Z',totalAmount:800000,status:'처리중',paymentStatus:'결제완료',placementStatus:'발주완료',items:[{id:'ITEM002',name:'명품 시계 B',quantity:1,price:800000}],shippingAddress:'부산시 해운대구 센텀시티로 45'},{id:'ORD003',customerName:'박민수',customerEmail:'park@example.com',orderDate:'2023-10-24T09:15:00Z',totalAmount:2500000,status:'배송준비중',paymentStatus:'결제완료',placementStatus:'발주완료',items:[{id:'ITEM003',name:'명품 지갑 C',quantity:2,price:500000},{id:'ITEM004',name:'명품 신발 D',quantity:1,price:1500000}],shippingAddress:'대구시 수성구 동대구로 789'}];export default function OrdersPage(){const[orders,setOrders]=useState<Order[]>([]);const[selectedOrder,setSelectedOrder]=useState<Order|null>(null);const[isDetailModalOpen,setIsDetailModalOpen]=useState(false);useEffect(()=>{const stored=getOrdersFromLocalStorage();if(stored.length===0){setOrders(initialOrders);saveOrdersToLocalStorage(initialOrders);}else{setOrders(stored);}},[]);const updateOrder=(updatedOrder:Order)=>{const updatedOrders=orders.map(order=>order.id===updatedOrder.id?updatedOrder:order);setOrders(updatedOrders);saveOrdersToLocalStorage(updatedOrders);};const handleOrderStatusChange=(orderId:string,newStatus:OrderStatus)=>{const orderToUpdate=orders.find(order=>order.id===orderId);if(orderToUpdate){const updatedOrder={...orderToUpdate,status:newStatus};updateOrder(updatedOrder);}};const handlePaymentStatusChange=(orderId:string,newStatus:PaymentStatus)=>{const orderToUpdate=orders.find(order=>order.id===orderId);if(orderToUpdate){const updatedOrder={...orderToUpdate,paymentStatus:newStatus};updateOrder(updatedOrder);}};const handleOrderPlacement=(orderId:string)=>{const orderToUpdate=orders.find(order=>order.id===orderId);if(orderToUpdate&&orderToUpdate.placementStatus==='발주대기'){const updatedOrder={...orderToUpdate,placementStatus:'발주완료'};updateOrder(updatedOrder);alert(`주문 ${orderId} 발주 요청 완료!`);}};const openDetailModal=(order:Order)=>{setSelectedOrder(order);setIsDetailModalOpen(true);};return(<div className="container mx-auto py-8"><h1 className="text-3xl font-bold mb-6">주문관리페이지</h1><Card><CardHeader><CardTitle>주문목록</CardTitle></CardHeader><CardContent><div className="overflow-x-auto"><Table><TableHeader><TableRow><TableHead>주문ID</TableHead><TableHead>고객명</TableHead><TableHead>주문일</TableHead><TableHead>총액</TableHead><TableHead>주문상태</TableHead><TableHead>결제상태</TableHead><TableHead>발주상태</TableHead><TableHead className="text-right">액션</TableHead></TableRow></TableHeader><TableBody>{orders.map((order)=>(<TableRow key={order.id}><TableCell className="font-medium">{order.id}</TableCell><TableCell>{order.customerName}</TableCell><TableCell>{new Date(order.orderDate).toLocaleDateString('ko-KR')}</TableCell><TableCell>{order.totalAmount.toLocaleString('ko-KR')}원</TableCell><TableCell><Select onValueChange={(value:OrderStatus)=>handleOrderStatusChange(order.id,value)}value={order.status}><SelectTrigger className="w-[140px]"><SelectValue placeholder="상태선택"/></SelectTrigger><SelectContent><SelectItem value="주문접수">주문접수</SelectItem><SelectItem value="처리중">처리중</SelectItem><SelectItem value="배송준비중">배송준비중</SelectItem><SelectItem value="배송완료">배송완료</SelectItem><SelectItem value="주문취소">주문취소</SelectItem></SelectContent></Select></TableCell><TableCell><Select onValueChange={(value:PaymentStatus)=>handlePaymentStatusChange(order.id,value)}value={order.paymentStatus}><SelectTrigger className="w-[140px]"><SelectValue placeholder="상태선택"/></SelectTrigger><SelectContent><SelectItem value="결제대기">결제대기</SelectItem><SelectItem value="결제완료">결제완료</SelectItem><SelectItem value="결제취소">결제취소</SelectItem></SelectContent></Select></TableCell><TableCell>{order.placementStatus==='발주대기'?(<Button variant="outline"size="sm"onClick={()=>handleOrderPlacement(order.id)}>발주요청</Button>):(<span className="text-sm text-muted-foreground">{order.placementStatus}</span>)}</TableCell><TableCell className="text-right"><DropdownMenu><DropdownMenuTrigger asChild><Button variant="ghost"className="h-8 w-8 p-0"><span className="sr-only">메뉴열기</span><MoreHorizontal className="h-4 w-4"/></Button></DropdownMenuTrigger><DropdownMenuContent align="end"><DropdownMenuItem onClick={()=>openDetailModal(order)}>상세보기</DropdownMenuItem></DropdownMenuContent></DropdownMenu></TableCell></TableRow>))}</TableBody></Table></div></CardContent></Card><Dialog open={isDetailModalOpen}onOpenChange={setIsDetailModalOpen}>{selectedOrder&&(<DialogContent className="sm:max-w-[600px]"><DialogHeader><DialogTitle>주문상세정보</DialogTitle><DialogDescription>선택된주문의상세정보를확인합니다.</DialogDescription></DialogHeader><div className="grid gap-4 py-4"><div className="grid grid-cols-4 items-center gap-4"><Label htmlFor="orderId"className="text-right">주문ID</Label><Input id="orderId"value={selectedOrder.id}readOnly className="col-span-3"/></div><div className="grid grid-cols-4 items-center gap-4"><Label htmlFor="customerName"className="text-right">고객명</Label><Input id="customerName"value={selectedOrder.customerName}readOnly className="col-span-3"/></div><div className="grid grid-cols-4 items-center gap-4"><Label htmlFor="customerEmail"className="text-right">이메일</Label><Input id="customerEmail"value={selectedOrder.customerEmail}readOnly className="col-span-3"/></div><div className="grid grid-cols-4 items-center gap-4"><Label htmlFor="orderDate"className="text-right">주문일</Label><Input id="orderDate"value={new Date(selectedOrder.orderDate).toLocaleString('ko-KR')}readOnly className="col-span-3"/></div><div className="grid grid-cols-4 items-center gap-4"><Label htmlFor="totalAmount"className="text-right">총액</Label><Input id="totalAmount"value={`${selectedOrder.totalAmount.toLocaleString('ko-KR')}원`}readOnly className="col-span-3"/></div><div className="grid grid-cols-4 items-center gap-4"><Label htmlFor="shippingAddress"className="text-right">배송주소</Label><Input id="shippingAddress"value={selectedOrder.shippingAddress}readOnly className="col-span-3"/></div><div className="grid grid-cols-4 items-center gap-4"><Label className="text-right">주문상품</Label><div className="col-span-3"><ul className="list-disc pl-5">{selectedOrder.items.map(item=>(<li key={item.id}>{item.name}({item.quantity}개)-{item.price.toLocaleString('ko-KR')}원</li>))}</ul></div></div></div><DialogFooter><Button onClick={()=>setIsDetailModalOpen(false)}>닫기</Button></DialogFooter></DialogContent>)}</Dialog></div>);}